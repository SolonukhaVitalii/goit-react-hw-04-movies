{"version":3,"sources":["services/movie-api.js","components/Cast/Cast.module.css","components/MovieDetailsPage/MovieDetailsPage.module.css","decor/ClassComponent.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","services/GoBackHandler.js","components/MovieDetailsPage/MovieDetailsPage.jsx"],"names":["KEY","fetchTrending","API","Axios","get","then","res","status","Error","statusText","fetchMovieDetails","id","fetchMovieCast","fetchMovieReviews","fetchMovies","query","module","exports","NewComponent","fetchData","state","data","componentDidMount","movieId","props","match","params","setState","this","Component","ClassComponent","cast","map","el","className","s","List","Img","src","profile_path","alt","name","character","cast_id","results","length","author","content","handleGoBack","location","history","push","from","pathname","url","title","poster_path","vote_average","overview","genres","releaseDate","release_date","slice","Button","type","onClick","MovieDetails","MoviePoster","AdditionalInfo","to","path","render"],"mappings":"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","file":"static/js/4.37e9af3a.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst KEY = 'ab234249b42ad0b5c11163146e7a690b';\r\n\r\nexport const fetchTrending = () => {\r\n  const API = `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`;\r\n  return Axios.get(API).then(res => {\r\n    if (res.status === 200) return res;\r\n    throw Error(`${res.status} ${res.statusText}`);\r\n  });\r\n};\r\n\r\nexport const fetchMovieDetails = id => {\r\n  const API = `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`;\r\n  return Axios.get(API).then(res => {\r\n    if (res.status === 200) return res;\r\n    throw Error(`${res.status} ${res.statusText}`);\r\n  });\r\n};\r\n\r\nexport const fetchMovieCast = id => {\r\n  const API = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`;\r\n  return Axios.get(API).then(res => {\r\n    if (res.status === 200) return res;\r\n    throw Error(`${res.status} ${res.statusText}`);\r\n  });\r\n};\r\n\r\nexport const fetchMovieReviews = id => {\r\n  const API = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`;\r\n  return Axios.get(API).then(res => {\r\n    if (res.status === 200) return res;\r\n    throw Error(`${res.status} ${res.statusText}`);\r\n  });\r\n};\r\n\r\nexport const fetchMovies = query => {\r\n  const API = `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\r\n  return Axios.get(API).then(res => {\r\n    if (res.status === 200) return res;\r\n    throw Error(`${res.status} ${res.statusText}`);\r\n  });\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"Cast_List__2Ev4V\",\"Img\":\"Cast_Img__3laBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieDetails\":\"MovieDetailsPage_MovieDetails__22dK1\",\"MoviePoster\":\"MovieDetailsPage_MoviePoster__1hvCL\",\"Button\":\"MovieDetailsPage_Button__3Yxqq\",\"AdditionalInfo\":\"MovieDetailsPage_AdditionalInfo__3UQf8\"};","import React, { Component } from 'react';\r\n\r\nexport default (NewComponent, { fetchData }) =>\r\n  class ClassComponent extends Component {\r\n    state = { data: null };\r\n    componentDidMount = () => {\r\n      const { movieId } = this.props.match.params;\r\n      fetchData(movieId).then(({ data }) => this.setState({ data }));\r\n    };\r\n    render() {\r\n      const { data } = this.state;\r\n      return <NewComponent data={data} {...this.props} />;\r\n    }\r\n  };\r\n  ","import React from 'react';\r\nimport { fetchMovieCast } from '../../services/movie-api';\r\nimport ClassComponent from '../../decor/ClassComponent';\r\nimport s from './Cast.module.css';\r\n\r\nconst Cast = ({ data }) => {\r\n  const IMG = 'https://image.tmdb.org/t/p/w500';\r\n  if (data)\r\n    return data.cast.map(el => (\r\n      <ul className={s.List} key={el.cast_id}>\r\n        <li>\r\n          <img className={s.Img}src={IMG + el.profile_path} alt={el.name} />\r\n        </li>\r\n        <li>{el.name}</li>\r\n        <li>Character: {el.character}</li>\r\n      </ul>\r\n    ));\r\n  return null;\r\n};\r\n\r\nexport default ClassComponent(Cast, { fetchData: fetchMovieCast });","import React from 'react';\r\nimport { fetchMovieReviews } from '../../services/movie-api';\r\nimport ClassComponent from '../../decor/ClassComponent';\r\n\r\nconst Reviews = ({ data }) => {\r\n  if (data) {\r\n    return (\r\n      <ul>\r\n        {data.results.length > 0 ? (\r\n          data.results.map(el => (\r\n            <li key={el.id}>\r\n              <b>Author: {el.author}</b>\r\n              <p>{el.content}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <span>We don't have any reviews for this movie</span>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default ClassComponent(Reviews, { fetchData: fetchMovieReviews });","const handleGoBack = props => {\r\n  const { state } = props.location;\r\n\r\n  if (state) {\r\n    return props.history.push(state.from);\r\n  }\r\n\r\n  return props.history.push({\r\n    pathname: '/',\r\n  });\r\n};\r\n\r\nexport default handleGoBack;","import React, { Fragment } from 'react';\r\nimport { Link, Switch, Route } from 'react-router-dom';\r\nimport Cast from '../Cast';\r\nimport Reviews from '../Reviews';\r\nimport { fetchMovieDetails } from '../../services/movie-api';\r\nimport ClassComponent from '../../decor/ClassComponent';\r\nimport handleGoBack from '../../services/GoBackHandler';\r\nimport s from './MovieDetailsPage.module.css';\r\n\r\nconst MovieDetailsPage = props => {\r\n  const IMG = 'https://image.tmdb.org/t/p/w500';\r\n  const { data } = props;\r\n  if (data) {\r\n    const { url } = props.match;\r\n    const {\r\n      title,\r\n      poster_path,\r\n      vote_average,\r\n      overview,\r\n      genres,\r\n      release_date,\r\n    } = data;\r\n    const releaseDate = release_date.slice(0, 4);\r\n    return (\r\n      <Fragment>\r\n        <button className={s.Button}type=\"button\" onClick={() => handleGoBack(props)}>\r\n          Go back\r\n        </button>\r\n        <div className={s.MovieDetails}>\r\n          <img className={s.MoviePoster} src={IMG + poster_path} alt={title} />\r\n          <div>\r\n            <h1>\r\n              {title} ({releaseDate})\r\n            </h1>\r\n            <span>User Score {vote_average * 10}%</span>\r\n            <h2>Overview</h2>\r\n            <p>{overview}</p>\r\n            <h2>Genres</h2>\r\n            {genres && genres.map(el => <span key={el.id}>{el.name} </span>)}\r\n          </div>\r\n        </div>\r\n        <div className={s.AdditionalInfo}>\r\n          <h3>Additional information</h3>\r\n          <ul>\r\n            <li>\r\n              <Link to={`${url}/cast`}>Cast</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={`${url}/reviews`}>Reviews</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <Switch>\r\n            <Route\r\n              path=\"/movies/:movieId/cast\"\r\n              render={props => <Cast {...props} />}\r\n            />\r\n            <Route\r\n              path=\"/movies/:movieId/reviews\"\r\n              render={props => <Reviews {...props} />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default ClassComponent(MovieDetailsPage, {\r\n  fetchData: fetchMovieDetails,\r\n});"],"sourceRoot":""}